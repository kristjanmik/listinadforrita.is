// libs/mixins.less

// ==========================================================================
// Basic
// ==========================================================================

.clearfix() {
	&:before,
	&:after {
		content: " ";
		display: table;
	}
	&:after {
		clear: both;
	}
}

.center-block() {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

.box-sizing(@boxmodel) {
	-webkit-box-sizing: @boxmodel;
	-moz-box-sizing: @boxmodel;
	box-sizing: @boxmodel;
}

.user-select(@select:none) {
	-webkit-user-select: @select;
	-moz-user-select: @select;
	-o-user-select: @select;
	user-select: @select;
}

.background-clip(@clip) {
	-webkit-background-clip: @clip;
	-moz-background-clip: @clip;
	background-clip: @clip;
}

.background-origin(@origin) {
	-webkit-background-origin: @origin;
	-moz-background-origin: @origin;
	background-origin: @origin;
}

.background-size(@size){
	-webkit-background-size: @size;
	-moz-background-size: @size;
	-o-background-size: @size;
	background-size: @size;
}

.perspective(@perspective) {
	-webkit-perspective: @perspective;
	-moz-perspective: @perspective;
	-ms-perspective: @perspective;
	-o-perspective: @perspective;
	perspective: @perspective;
}
.perspective-origin(@perspective-origin) {
	-webkit-perspective-origin: @perspective-origin;
	-moz-perspective-origin: @perspective-origin;
	-ms-perspective-origin: @perspective-origin;
	-o-perspective-origin: @perspective-origin;
	perspective-origin: @perspective-origin;
}

// ==========================================================================
// Text/content related
// ==========================================================================

.font-face( @family-name, @font-path, @font-weight:normal, @font-style:normal, @include-svg:false ) when not (@include-svg) {
	@font-face {
	    font-family: @family-name;
	    src: url('@{font-path}.eot');
	    src: url('@{font-path}.eot?#iefix') format('embedded-opentype'),
	         url('@{font-path}.woff') format('woff'),
	         url('@{font-path}.ttf') format('truetype');
	    font-weight: @font-weight;
	    font-style: @font-style;
	}
}

.font-face( @family-name, @font-path, @font-weight:normal, @font-style:normal, @include-svg:false ) when (@include-svg) {
	@font-face {
	    font-family: @family-name;
	    src: url('@{font-path}.eot');
	    src: url('@{font-path}.eot?#iefix') format('embedded-opentype'),
			 		 url('@{font-path}.svg#@{family-name}') format('svg'),
	         url('@{font-path}.woff') format('woff'),
	         url('@{font-path}.ttf') format('truetype');
	    font-weight: @font-weight;
	    font-style: @font-style;
	}
}

.font-size-ems(@target-px-size, @context-px-size:@font-size) {
	font-size: (@target-px-size / @context-px-size) * 1em;
}

.text-overflow() {
	// Requires inline-block or block for proper styling
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

.reset-list() {
	list-style-type: none;
	list-style-image: none;
	list-style-position: outside;
}

.cols(@width: (@page-max-width/3 - (@gutter*2)), @count: 0, @gap: @gutter, @rule-color: @color-border, @rule-style: solid, @rule-width: 0px) {
	-moz-column-width: @width;
	-moz-column-count: @count;
	-moz-column-gap: @gap;
	-moz-column-rule-color: @rule-color;
	-moz-column-rule-style: @rule-style;
	-moz-column-rule-width: @rule-width;
	-webkit-column-width: @width;
	-webkit-column-count: @count;
	-webkit-column-gap: @gap;
	-webkit-column-rule-color: @rule-color;
	-webkit-column-rule-style: @rule-style;
	-webkit-column-rule-width: @rule-width;
	column-width: @width;
	column-count: @count;
	column-gap: @gap;
	column-rule-color: @rule-color;
	column-rule-style: @rule-style;
	column-rule-width: @rule-width;
}

// ==========================================================================
// Form element related
// ==========================================================================

.resizable(@direction: both) {
	// resize: horizontal | vertical | both
	resize: @direction;
	overflow: auto; // Safari fix
}

.placeholder(@color: @color-gray-light,@font-style:normal) {
	&:-moz-placeholder {
		color: @color;
		font-style: @font-style;
	}
	&:-ms-input-placeholder {
		color: @color;
		font-style: @font-style;
	}
	&::-webkit-input-placeholder {
		color: @color;
		font-style: @font-style;
	}
}


// ==========================================================================
// Animation
// ==========================================================================

.animation(@animationA, @animationB:X,...) {
	@animation: ~`"@{arguments}".replace(/[\[\]]|\,\sX/g, '')`;
	-webkit-animation: @animation;
	-moz-animation: @animation;
	-ms-animation: @animation;
	-o-animation: @animation;
	animation: @animation;
}

// ==========================================================================
// Transitions
// ==========================================================================

.transition(@transitionA,@transitionB:X,...){
	@transition: ~`"@{arguments}".replace(/[\[\]]|\,\sX/g, '')`;
	-webkit-transition: @transition;
	-khtml-transition: @transition;
	-moz-transition: @transition;
	-ms-transition: @transition;
	-o-transition: @transition;
	transition: @transition;
}

.transition-delay(@delay) {
	-webkit-transition-delay: @delay;
	-khtml-transition-delay: @delay;
	-moz-transition-delay: @delay;
	-ms-transition-delay: @delay;
	-o-transition-delay: @delay;
	transition-delay: @delay;
}

.transition-property(@property) {
	-webkit-transition-property: @property;
	-khtml-transition-property: @property;
	-moz-transition-property: @property;
	-ms-transition-property: @property;
	-o-transition-property: @property;
	transition-property: @property;
}

.transition-duration(@duration) {
	-webkit-transition-duration: @duration;
	-khtml-transition-duration: @duration;
	-moz-transition-duration: @duration;
	-ms-transition-duration: @duration;
	-o-transition-duration: @duration;
	transition-duration: @duration;
}

.transition-timing-function(@timing-function) {
	-webkit-transition-timing-function: @timing-function;
	-khtml-transition-timing-function: @timing-function;
	-moz-transition-timing-function: @timing-function;
	-ms-transition-timing-function: @timing-function;
	-o-transition-timing-function: @timing-function;
	transition-timing-function: @timing-function;
}

// ==========================================================================
// Transformations
// ==========================================================================

.transform(@str) {
	-webkit-transform: @str;
	-moz-transform: @str;
	-ms-transform: @str;
	-o-transform: @str;
	transform: @str;
}

.transform-origin(@x: left, @y: top) {
	-webkit-transform-origin: @x @y;
	-moz-transform-origin: @x @y;
	-ms-transform-origin: @x @y;
	-o-transform-origin: @x @y;
	transform-origin: @x @y;
}

.transform-style(@style) {
	-webkit-transform-style: @style;
	-moz-transform-style: @style;
	-ms-transform-style: @style;
	-o-transform-style: @style;
	transform-style: @style;
}

.backface-visibility(@string) {
	-webkit-backface-visibility: @string;
	-moz-backface-visibility: @string;
	-ms-backface-visibility: @string;
	-o-backface-visibility: @string;
	backface-visibility: @string;
}

// Shortcuts ============================================================

.translate(@x: 0, @y: 0) {
	.transform (translate(@x, @y));
}
.translate3d(@x: 0, @y: 0, @z: 0) {
	.transform (translate3d(@x, @y, @z));
}
.translateX(@x: 0) {
	.transform (translateX(@x));
}
.translateY(@y: 0) {
	.transform (translateY(@y));
}
.translateZ(@z: 0) {
	.transform (translateZ(@z));
}

.scale(@x:1) {
	.transform (scale(@x));
}
.scale(@x:1, @y:1) {
	.transform (scale(@x, @y));
}
.scale3d(@x:1, @y:1, @z:1) {
	.transform (scale3d(@x, @y, @z));
}
.scaleX(@x:1) {
	.transform (scaleX(@x));
}
.scaleY(@y:1) {
	.transform (scaleY(@y));
}
.scaleZ(@z:1) {
	.transform (scaleZ(@z));
}

.rotate(@angle:0) {
	.transform (rotate(@angle));
}
.rotate3d(@x:0, @y:0, @z:0, @angle:0) {
	.transform (rotate3d(@x, @y, @z, @angle));
}
.rotateX(@x:0) {
	.transform (rotateX(@x));
}
.rotateY(@y:0) {
	.transform (rotateY(@y));
}
.rotateZ(@z:0) {
	.transform (rotateZ(@z));
}

.skew(@angle:0) {
	.transform (skew(@angle));
}
.skew(@x: 0, @y: 0) {
	.transform (skew(@x, @y));
}
.skewX(@x:0) {
	.transform (skewX(@x));
}
.skewY(@y:0) {
	.transform (skewY(@y));
}

// ======================================================================